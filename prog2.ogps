/* 	This is a model of system with multiple CPUs
*	and shared command buffer. Commands are loading
*	to buffer from RAM beforehand.
*/

int buffer = 0;
int BUFFER_CAPACITY = 20;
int completedCommands = 0;
fac RAM { places = 1 };
fac CPUs{ isQueued = true, places = 3 };
mark RAMCycle;
mark CPUCycle;

exitwhen(completedCommands > 10);
{{
/* RAM imitation */
inject("RAM cycling Xact", 0, 0, 0, 1) {priority = 10};
RAMCycle: fac_enter(RAM);
wait(10, 2);
try(buffer < BUFFER_CAPACITY)
{
	fac_leave(RAM);
	buffer++;
	->> RAMCycle;
}

/* Multiple CPU system imitation */
inject("CPUs cycling Xact", 0, 0, 0, 3);
CPUCycle: try(buffer > 0)
{
	fac_enter(CPUs);
	buffer--;
	wait(30, 6);
	fac_leave(CPUs);
	completedCommands++;
	/* It was maybe a command which will erase buffer: */
	->| CPUCycle, 0.9;
	buffer = 0;
	->> CPUCycle;
}
}}
